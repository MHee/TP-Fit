function Decay=DecayModel(k,rc)
% FEMLAB Model M-file
% Generated by FEMLAB 3.1i (FEMLAB 3.1.0.166, $Date: 2005/05/10 11:25:08 $)
% Some geometry objects are stored in a separate file.
% The name of this file is given by the variable 'flbinaryfile'.
if ~exist('k','var')
    k=1;
    rc=3.3e6;
end

if ~exist('DecayModelResources.mat','file')
    flclear fem

    % Femlab version
    clear vrsn
    vrsn.name = 'FEMLAB 3.1';
    vrsn.ext = 'i';
    vrsn.major = 0;
    vrsn.build = 166;
    vrsn.rcs = '$Name:  $';
    vrsn.date = '$Date: 2005/05/10 11:25:08 $';
    fem.version = vrsn;

    flbinaryfile='DecayModel.flm';

    % Geometry
    clear draw
    g3=flbinary('g3','draw',flbinaryfile);
    draw.p.objs = {g3};
    draw.p.name = {'Sensor1'};
    draw.p.tags = {'g3'};
    g1=flbinary('g1','draw',flbinaryfile);
    g2=flbinary('g2','draw',flbinaryfile);
    draw.s.objs = {g1,g2};
    draw.s.name = {'APC1','Sediment1'};
    draw.s.tags = {'g1','g2'};
    fem.draw = draw;
    fem.geom = geomcsg(fem);

    % Initialize mesh
    fem.mesh=meshinit(fem);

    % Refine mesh
    fem.mesh=meshrefine(fem, ...
        'mcase',0, ...
        'boxcoord',[0.023126599092550465 0.050136172907911336 -0.006759547623231443 0.08725454584946707], ...
        'rmethod','regular');

    % (Default values are not included)
    save('DecayModelResources.mat','fem');
else
    load('DecayModelResources.mat');
end
% Application mode 1
clear appl
appl.mode.class = 'HeatTransfer';
appl.mode.type = 'axi';
appl.border = 'on';
appl.assignsuffix = '_ht';
clear bnd
bnd.T0 = {0,1,0,0};
bnd.type = {'q0','cont','ax','T'};
bnd.ind = [3,4,1,2,2,1,1,1,2,1,1,2,1,4];
appl.bnd = bnd;
clear equ
equ.init = {0,1};
equ.k = {k,25.3};
equ.rho = {1,8000};
equ.C = {rc,452.17};
equ.ind = [1,2];
appl.equ = equ;
fem.appl{1} = appl;
fem.sdim = {'r','z'};
fem.border = 1;
fem.outform = 'general';

% Multiphysics
fem=multiphysics(fem);

% Extend mesh
fem.xmesh=meshextend(fem);

% Solve problem
fem.sol=femtime(fem, ...
                'solcomp',{'T'}, ...
                'outcomp',{'T'}, ...
                'tlist',[[0 logspace(-2,5,200)]], ...
                'tout','tlist', ...
                'tsteps','intermediate');

Sol=posteval(fem,'T','Edim',0,'Dl',7,'T',fem.sol.tlist);
Decay.t=fem.sol.tlist;
Decay.T=Sol.d';