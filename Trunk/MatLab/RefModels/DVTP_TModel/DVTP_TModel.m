function Decay=DVTP_TModel(k,rc)
% FEMLAB Model M-file
% Generated by FEMLAB 3.1i (FEMLAB 3.1.0.166, $Date: 2005/05/10 11:25:08 $)
% Some geometry objects are stored in a separate file.
% The name of this file is given by the variable 'flbinaryfile'.
if ~exist('k','var')
    k=1;
    rc=3.3e6;
end

if ~exist('DVTP_TModel_Resources.mat','file')
flclear fem

% Femlab version
clear vrsn
vrsn.name = 'FEMLAB 3.1';
vrsn.ext = 'i';
vrsn.major = 0;
vrsn.build = 166;
vrsn.rcs = '$Name:  $';
vrsn.date = '$Date: 2005/05/10 11:25:08 $';
fem.version = vrsn;

flbinaryfile='DVTP_TModel.flm';

% Geometry
g1=flbinary('g1','draw',flbinaryfile);
g2=flbinary('g2','draw',flbinaryfile);
parr={point2(0,0)};
g3=geomcoerce('point',parr);
parr={point2(0,0.1)};
g4=geomcoerce('point',parr);
clear p s
p.objs={g3,g4};
p.name={'PT1','PT2'};
p.tags={'g3','g4'};

s.objs={g1,g2};
s.name={'Probe1','Seds1'};
s.tags={'g1','g2'};

fem.draw=struct('p',p,'s',s);
fem.geom=geomcsg(fem);

% Initialize mesh
fem.mesh=meshinit(fem);

% Refine mesh
fem.mesh=meshrefine(fem, ...
                    'mcase',0, ...
                    'boxcoord',[-0.005802137943559799 0.019001193776425326 0.08726852448634773 0.11261105906981078], ...
                    'rmethod','regular');

% Refine mesh
fem.mesh=meshrefine(fem, ...
                    'mcase',0, ...
                    'boxcoord',[-0.004454130784864951 0.006329926484693799 0.09400856027982193 0.11126305191111593], ...
                    'rmethod','regular');

% Refine mesh
fem.mesh=meshrefine(fem, ...
                    'mcase',0, ...
                    'boxcoord',[-0.002027717899214229 0.002285905008609257 -0.0027783537144678294 0.002074472056833615], ...
                    'rmethod','regular');

% (Default values are not included)
   save('DVTP_TModel_Resources.mat','fem');
else
    load('DVTP_TModel_Resources.mat');
end

% Application mode 1
clear appl
appl.mode.class = 'HeatTransfer';
appl.mode.type = 'axi';
appl.assignsuffix = '_ht';
clear bnd
bnd.type = {'q0','cont','T0'};
bnd.ind = [1,3,1,1,1,1,1,2,2,1,3,3,2];
appl.bnd = bnd;
clear equ
equ.init = {0,1};
equ.k = {k,17};
equ.rho = {1,7810};
equ.C = {rc,460};
equ.ind = [1,2];
appl.equ = equ;
fem.appl{1} = appl;
fem.sdim = {'r','z'};
fem.border = 1;
fem.outform = 'general';

% Multiphysics
fem=multiphysics(fem);

% Extend mesh
fem.xmesh=meshextend(fem);

% Solve problem
fem.sol=femtime(fem, ...
                'solcomp',{'T'}, ...
                'outcomp',{'T'}, ...
                'tlist',[[0 logspace(-2,5,200)]], ...
                'tout','tlist', ...
                'tsteps','intermediate');

Sol=posteval(fem,'T','Edim',0,'Dl',[4 5],'T',fem.sol.tlist);
Decay.t=fem.sol.tlist;
Decay.T=Sol.d';
